# ===================================================================
# Astronomical Data Pipeline - Pre-commit Configuration
# Install: pip install pre-commit && pre-commit install
# ===================================================================

repos:
  # ===== GENERAL CODE QUALITY =====
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ['--maxkb=50000']  # 50MB limit
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-toml
      - id: check-xml
      - id: debug-statements
      - id: detect-private-key
      - id: mixed-line-ending
      - id: pretty-format-json
        args: ['--autofix']

  # ===== SECRETS DETECTION =====
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package.lock.json

  # ===== TERRAFORM =====
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.88.0
    hooks:
      - id: terraform_fmt
      - id: terraform_validate
        args:
          - --hook-config=--retry-once-with-cleanup=true
      - id: terraform_docs
        args:
          - --hook-config=--path-to-file=README.md
          - --hook-config=--add-to-existing-file=true
          - --hook-config=--create-file-if-not-exist=true
      - id: terraform_tflint
        args:
          - --args=--only=terraform_deprecated_interpolation
          - --args=--only=terraform_deprecated_index
          - --args=--only=terraform_unused_declarations
          - --args=--only=terraform_comment_syntax
          - --args=--only=terraform_documented_outputs
          - --args=--only=terraform_documented_variables
          - --args=--only=terraform_typed_variables
          - --args=--only=terraform_module_pinned_source
          - --args=--only=terraform_naming_convention
          - --args=--only=terraform_required_version
          - --args=--only=terraform_required_providers
          - --args=--only=terraform_standard_module_structure
          - --args=--only=terraform_workspace_remote

  # ===== PYTHON =====
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: ['--line-length=88']

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black"]

  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=88', '--extend-ignore=E203,W503']

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-requests, types-PyYAML]

  # ===== JAVA =====
  - repo: local
    hooks:
      - id: java-checkstyle
        name: Java Checkstyle
        entry: bash -c 'cd application && find . -name "*.java" -exec ./gradlew checkstyleMain checkstyleTest \;'
        language: system
        files: \.java$

      - id: java-spotbugs
        name: Java SpotBugs
        entry: bash -c 'cd application && ./gradlew spotbugsMain spotbugsTest'
        language: system
        files: \.java$

      - id: java-pmd
        name: Java PMD
        entry: bash -c 'cd application && ./gradlew pmdMain pmdTest'
        language: system
        files: \.java$

  # ===== DOCKER =====
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # ===== YAML =====
  - repo: https://github.com/adrienverge/yamllint.git
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: [-c=.yamllint.yml]

  # ===== KUBERNETES =====
  - repo: local
    hooks:
      - id: kubernetes-validate
        name: Validate Kubernetes YAML
        entry: bash -c 'find kubernetes/ -name "*.yaml" -o -name "*.yml" | xargs -I {} kubeval {}'
        language: system
        files: ^kubernetes/.*\.(yaml|yml)$

  # ===== SECURITY SCANNING =====
  - repo: https://github.com/bridgecrewio/checkov
    rev: 3.2.3
    hooks:
      - id: checkov
        args: ['-d', '.', '--framework', 'terraform', '--framework', 'kubernetes', '--framework', 'dockerfile']

  # ===== COMMIT MESSAGE =====
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # ===== CUSTOM HOOKS =====
  - repo: local
    hooks:
      - id: astronomical-data-validation
        name: Validate Astronomical Data References
        entry: bash -c 'scripts/validate_astronomical_references.sh'
        language: system
        files: \.(py|java|tf)$

      - id: performance-test-syntax
        name: Validate Performance Test Syntax
        entry: bash -c 'python -m py_compile scripts/performance-testing/*.py'
        language: system
        files: ^scripts/performance-testing/.*\.py$

      - id: no-large-fits-files
        name: Prevent Large FITS Files
        entry: bash -c 'find . -name "*.fits" -size +100M -exec echo "Large FITS file detected: {}" \; -exec false \;'
        language: system