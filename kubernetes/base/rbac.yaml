apiVersion: v1
kind: ServiceAccount
metadata:
  name: astro-pipeline-sa
  namespace: astro-pipeline
  labels:
    app: astro-pipeline
    component: security
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/astro-pipeline-service-role

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: astro-pipeline-role
  namespace: astro-pipeline
  labels:
    app: astro-pipeline
    component: security
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch", "create"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: astro-pipeline-rolebinding
  namespace: astro-pipeline
  labels:
    app: astro-pipeline
    component: security
subjects:
- kind: ServiceAccount
  name: astro-pipeline-sa
  namespace: astro-pipeline
roleRef:
  kind: Role
  name: astro-pipeline-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: astro-pipeline-cluster-role
  labels:
    app: astro-pipeline
    component: security
rules:
- apiGroups: [""]
  resources: ["nodes", "nodes/metrics"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: astro-pipeline-cluster-rolebinding
  labels:
    app: astro-pipeline
    component: security
subjects:
- kind: ServiceAccount
  name: astro-pipeline-sa
  namespace: astro-pipeline
roleRef:
  kind: ClusterRole
  name: astro-pipeline-cluster-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-sa
  namespace: astro-pipeline
  labels:
    app: prometheus
    component: monitoring

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-cluster-role
  labels:
    app: prometheus
    component: monitoring
rules:
- apiGroups: [""]
  resources: ["nodes", "nodes/proxy", "services", "endpoints", "pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-cluster-rolebinding
  labels:
    app: prometheus
    component: monitoring
subjects:
- kind: ServiceAccount
  name: prometheus-sa
  namespace: astro-pipeline
roleRef:
  kind: ClusterRole
  name: prometheus-cluster-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana-sa
  namespace: astro-pipeline
  labels:
    app: grafana
    component: monitoring

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: grafana-role
  namespace: astro-pipeline
  labels:
    app: grafana
    component: monitoring
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["services", "endpoints", "pods"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: grafana-rolebinding
  namespace: astro-pipeline
  labels:
    app: grafana
    component: monitoring
subjects:
- kind: ServiceAccount
  name: grafana-sa
  namespace: astro-pipeline
roleRef:
  kind: Role
  name: grafana-role
  apiGroup: rbac.authorization.k8s.io